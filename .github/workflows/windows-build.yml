name: Windows Electron Build

on:
  workflow_dispatch:
  push:
    branches:
      - Schedule-III-Drafting-Automation
      - main
      - copilot/**

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
                
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
                
      - name: Install pnpm
        run: npm install -g pnpm

      - name: Create .env file from template
        working-directory: Financials Automation
        run: |
          if (Test-Path config.env.template) {
            Copy-Item config.env.template .env
            Write-Host ".env file created from template"
          } else {
            Write-Host "Creating minimal .env file"
            @"
          NODE_ENV=production
          DATABASE_URL=postgresql://postgres:postgres@localhost:5432/financialsdb
          JWT_SECRET=default-jwt-secret-please-change-in-production
          ADMIN_PASSWORD=Admin@123
          APP_NAME=Financial Statement Generator
          LOG_LEVEL=info
          DB_CONNECTION_POOL_MIN=2
          DB_CONNECTION_POOL_MAX=10
          SESSION_TIMEOUT_MINUTES=1440
          MAX_FILE_SIZE_MB=50
          ENABLE_AUTO_BACKUP=true
          BACKUP_RETENTION_DAYS=30
          "@ | Out-File -FilePath .env -Encoding utf8
          }
        shell: pwsh
         
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        working-directory: Financials Automation

      - name: Generate Prisma client
        run: pnpm exec prisma generate
        working-directory: Financials Automation

      - name: Build web application
        run: pnpm run build
        working-directory: Financials Automation

      - name: Compile Electron scripts
        run: pnpm run build:electron
        working-directory: Financials Automation

      - name: Build Windows installer
        run: npx electron-builder --win --config electron-builder.config.cjs
        working-directory: Financials Automation

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: Financial-Statement-Generator-Installer
          path: Financials Automation/dist-electron/*.exe
        
